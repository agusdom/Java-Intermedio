/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;

import java.awt.*;
import javax.swing.*;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import static ventanas.GestionarClientes.IdCliente_update;

/**
 *
 * @author agust
 */
public class InformacionCliente extends javax.swing.JFrame {

    String User = "";
    public static int IdEquipo = 0;
    int IdCliente_update = 0;
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form InformacionCliente
     */
    public InformacionCliente() {
        initComponents();
        User = Login.User;
        IdCliente_update = GestionarClientes.IdCliente_update;

        setLocationRelativeTo(null);
        setSize(630, 450);
        setResizable(false);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(), jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();

        try {
            Connection cn = Conexion.Conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from clientes where Id_Clientes = '" + IdCliente_update + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                setTitle("Información del Cliente " + rs.getString("Nombre_Clientes") + " - Sesión de " + User);
                jLabel_Titulo.setText("Información del Cliente " + rs.getString("Nombre_Clientes"));

                txt_Nombre.setText(rs.getString("Nombre_Clientes"));
                txt_Email.setText(rs.getString("Email_Clientes"));
                txt_Telefono.setText(rs.getString("Telefono_Clientes"));
                txt_Direccion.setText(rs.getString("Direccion_Clientes"));
                txt_UltimaModificación.setText(rs.getString("Ultima_Modificacion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error en cargar usuario." + e);
            JOptionPane.showMessageDialog(null, "¡¡Error al cargar!!, contacte al administrador.");
        }

        try {
            Connection cn = Conexion.Conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select Id_Equipos,Tipo_Equipo,Marca,Estatus from equipos where Id_Clientes = '" + IdCliente_update + "'");
            ResultSet rs = pst.executeQuery();

            jTable_Equipos = new JTable(model);
            jScrollPane_Equipos.setViewportView(jTable_Equipos);

            model.addColumn("Id Equipo");
            model.addColumn("Tipo de Equipo");
            model.addColumn("Marca");
            model.addColumn("Estatus");

            while (rs.next()) {
                Object[] Fila = new Object[4];

                for (int i = 0; i < 4; i++) {
                    Fila[i] = rs.getObject(i + 1);
                }

                model.addRow(Fila);
            }

            cn.close();

        } catch (SQLException e) {
            System.err.println("Error en el llenado de la tabla equipo.");
        }

        jTable_Equipos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int Fila_Point = jTable_Equipos.rowAtPoint(e.getPoint());
                int Columna_Point = 0;

                if (Fila_Point > -1) {
                    IdEquipo = (int) model.getValueAt(Fila_Point, Columna_Point);
                    InformacionEquipo informacion_Equipo = new InformacionEquipo();
                    informacion_Equipo.setVisible(true);
                }
            }

        });

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Titulo = new javax.swing.JLabel();
        jLabel_Nombre = new javax.swing.JLabel();
        jLabel_Email = new javax.swing.JLabel();
        jLabel_Telefono = new javax.swing.JLabel();
        jLabel_Direccion = new javax.swing.JLabel();
        jLabel_UltimaModificación = new javax.swing.JLabel();
        txt_Nombre = new javax.swing.JTextField();
        txt_Email = new javax.swing.JTextField();
        txt_Telefono = new javax.swing.JTextField();
        txt_Direccion = new javax.swing.JTextField();
        txt_UltimaModificación = new javax.swing.JTextField();
        jScrollPane_Equipos = new javax.swing.JScrollPane();
        jTable_Equipos = new javax.swing.JTable();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Registrar = new javax.swing.JButton();
        jButton_ImprimirReporte = new javax.swing.JButton();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Titulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_Titulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Titulo.setText("Información del Cliente");
        getContentPane().add(jLabel_Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel_Nombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Nombre.setText("Nombre:");
        getContentPane().add(jLabel_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel_Email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_Email.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Email.setText("Email:");
        getContentPane().add(jLabel_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel_Telefono.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_Telefono.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Telefono.setText("Telefono:");
        getContentPane().add(jLabel_Telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel_Direccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_Direccion.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Direccion.setText("Dirección:");
        getContentPane().add(jLabel_Direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel_UltimaModificación.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_UltimaModificación.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_UltimaModificación.setText("Ultima Modificación por:");
        getContentPane().add(jLabel_UltimaModificación, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        txt_Nombre.setBackground(new java.awt.Color(153, 153, 255));
        txt_Nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_Nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        txt_Email.setBackground(new java.awt.Color(153, 153, 255));
        txt_Email.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_Email.setForeground(new java.awt.Color(255, 255, 255));
        txt_Email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Email.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        txt_Telefono.setBackground(new java.awt.Color(153, 153, 255));
        txt_Telefono.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_Telefono.setForeground(new java.awt.Color(255, 255, 255));
        txt_Telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_Telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        txt_Direccion.setBackground(new java.awt.Color(153, 153, 255));
        txt_Direccion.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_Direccion.setForeground(new java.awt.Color(255, 255, 255));
        txt_Direccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Direccion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_Direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 210, -1));

        txt_UltimaModificación.setBackground(new java.awt.Color(153, 153, 255));
        txt_UltimaModificación.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_UltimaModificación.setForeground(new java.awt.Color(255, 255, 255));
        txt_UltimaModificación.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_UltimaModificación.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_UltimaModificación.setEnabled(false);
        getContentPane().add(txt_UltimaModificación, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 210, -1));

        jTable_Equipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane_Equipos.setViewportView(jTable_Equipos);

        getContentPane().add(jScrollPane_Equipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 380, 180));

        jButton_Actualizar.setBackground(new java.awt.Color(153, 153, 255));
        jButton_Actualizar.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_Actualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Actualizar.setText("Actualizar Cliente");
        jButton_Actualizar.setBorder(null);
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 210, 35));

        jButton_Registrar.setBackground(new java.awt.Color(153, 153, 255));
        jButton_Registrar.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_Registrar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Registrar.setText("Registrar Equipo");
        jButton_Registrar.setBorder(null);
        jButton_Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 210, 35));

        jButton_ImprimirReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora.png"))); // NOI18N
        jButton_ImprimirReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ImprimirReporteActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ImprimirReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 120, 100));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed
        // TODO add your handling code here:

        int Validacion = 0;
        String Nombre, Email, Telefono, Direccion;

        Nombre = txt_Nombre.getText().trim();
        Email = txt_Email.getText().trim();
        Telefono = txt_Telefono.getText().trim();
        Direccion = txt_Direccion.getText().trim();

        if (Nombre.equals("")) {
            txt_Nombre.setBackground(Color.RED);
            Validacion++;
        }
        if (Email.equals("")) {
            txt_Email.setBackground(Color.RED);
            Validacion++;
        }
        if (Telefono.equals("")) {
            txt_Telefono.setBackground(Color.RED);
            Validacion++;
        }
        if (Direccion.equals("")) {
            txt_Direccion.setBackground(Color.RED);
            Validacion++;
        }

        if (Validacion == 0) {
            try {
                Connection cn = Conexion.Conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "update clientes set Nombre_Clientes = ?, Email_Clientes = ?, Telefono_Clientes = ?,Direccion_Clientes = ?, Ultima_Modificacion = ? where Id_Clientes = '" + IdCliente_update + "'");
                pst.setString(1, Nombre);
                pst.setString(2, Email);
                pst.setString(3, Telefono);
                pst.setString(4, Direccion);
                pst.setString(5, User);

                pst.executeUpdate();
                cn.close();

                Limpiar();

                txt_Nombre.setBackground(Color.GREEN);
                txt_Email.setBackground(Color.GREEN);
                txt_Telefono.setBackground(Color.GREEN);
                txt_Direccion.setBackground(Color.GREEN);
                txt_UltimaModificación.setText(User);

                JOptionPane.showMessageDialog(null, "Actualización Correcta.");
            } catch (SQLException e) {
                System.err.println("Error al actualizar cliente. " + e);
                JOptionPane.showMessageDialog(null, "¡¡Error al actualizar cliente!!, contacte al administrador.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
        }
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RegistrarActionPerformed
        // TODO add your handling code here:
        RegistrarEquipo registrarEquipo = new RegistrarEquipo();
        registrarEquipo.setVisible(true);
    }//GEN-LAST:event_jButton_RegistrarActionPerformed

    private void jButton_ImprimirReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ImprimirReporteActionPerformed
        // TODO add your handling code here:
        Document documento = new Document();

        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/OneDrive/Escritorio/" + txt_Nombre.getText().trim() + ".pdf"));

            com.itextpdf.text.Image Header = com.itextpdf.text.Image.getInstance("src/images/BannerPDF.jpg");
            Header.scaleToFit(650, 1000);
            Header.setAlignment(Chunk.ALIGN_CENTER);

            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Información del cliente. \n\n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

            documento.open();
            documento.add(Header);
            documento.add(parrafo);

            PdfPTable tablaCliente = new PdfPTable(5);
            tablaCliente.addCell("ID");
            tablaCliente.addCell("Nombre");
            tablaCliente.addCell("Email");
            tablaCliente.addCell("Télefono");
            tablaCliente.addCell("Dirección");

            try {
                Connection cn = Conexion.Conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select * from clientes where Id_Clientes = '" + IdCliente_update + "'");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    do {
                        tablaCliente.addCell(rs.getString(1));
                        tablaCliente.addCell(rs.getString(2));
                        tablaCliente.addCell(rs.getString(3));
                        tablaCliente.addCell(rs.getString(4));
                        tablaCliente.addCell(rs.getString(5));
                    } while (rs.next());

                    documento.add(tablaCliente);
                }

                Paragraph parrafo2 = new Paragraph();
                parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                parrafo2.add("\n\n Equipos Registrados. \n\n");
                parrafo2.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

                documento.add(parrafo2);

                PdfPTable tablaEquipos = new PdfPTable(4);

                tablaEquipos.addCell("ID Equipo");
                tablaEquipos.addCell("Tipo");
                tablaEquipos.addCell("Marca");
                tablaEquipos.addCell("Estatus");

                try {
                    Connection cn2 = Conexion.Conectar();
                    PreparedStatement pst2 = cn2.prepareStatement(
                            "select Id_Equipos,Tipo_Equipo,Marca,Estatus from equipos where Id_Clientes = '" + IdCliente_update + "'");

                    ResultSet rs2 = pst2.executeQuery();

                    if (rs2.next()) {
                        do {

                            tablaEquipos.addCell(rs2.getString(1));
                            tablaEquipos.addCell(rs2.getString(2));
                            tablaEquipos.addCell(rs2.getString(3));
                            tablaEquipos.addCell(rs2.getString(4));

                        } while (rs2.next());

                        documento.add(tablaEquipos);
                    }
                } catch (SQLException e) {
                    System.err.println("Error al cargar equipos. " + e);
                }

            } catch (SQLException e) {
                System.err.println("Error al obtener datos del cliente. " + e);
            }

            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte creado correctamente.");

        } catch (DocumentException | IOException e) {

            System.err.println("Error en PDF o ruta de imagen. " + e);
            JOptionPane.showMessageDialog(null, "Error al generar PDF, contacte al administrador.");
        }
    }//GEN-LAST:event_jButton_ImprimirReporteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InformacionCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_ImprimirReporte;
    private javax.swing.JButton jButton_Registrar;
    private javax.swing.JLabel jLabel_Direccion;
    private javax.swing.JLabel jLabel_Email;
    private javax.swing.JLabel jLabel_Nombre;
    private javax.swing.JLabel jLabel_Telefono;
    private javax.swing.JLabel jLabel_Titulo;
    private javax.swing.JLabel jLabel_UltimaModificación;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JScrollPane jScrollPane_Equipos;
    private javax.swing.JTable jTable_Equipos;
    private javax.swing.JTextField txt_Direccion;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_Nombre;
    private javax.swing.JTextField txt_Telefono;
    private javax.swing.JTextField txt_UltimaModificación;
    // End of variables declaration//GEN-END:variables
  public void Limpiar() {
        txt_Nombre.setText("");
        txt_Email.setText("");
        txt_Telefono.setText("");
        txt_Direccion.setText("");
    }
}
